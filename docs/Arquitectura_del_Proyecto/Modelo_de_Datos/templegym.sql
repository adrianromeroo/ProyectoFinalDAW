-- MySQL Script generated by MySQL Workbench
-- mar 08 jun 2021 21:08:24 CEST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema templegym
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema templegym
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `templegym` ;
USE `templegym` ;

-- -----------------------------------------------------
-- Table `templegym`.`USER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `templegym`.`USER` (
  `id` MEDIUMTEXT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `lastname` VARCHAR(45) NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `age` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `DNI_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `templegym`.`DIET`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `templegym`.`DIET` (
  `id` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `descripcion` VARCHAR(45) NOT NULL,
  `grasas` INT(3) NOT NULL,
  `carbohidratos` INT(3) NOT NULL,
  `proteinas` INT(3) NOT NULL,
  `alergenos` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `templegym`.`ROUTINE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `templegym`.`ROUTINE` (
  `ID` INT NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `intensidad` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `templegym`.`TRAINING_PLAN`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `templegym`.`TRAINING_PLAN` (
  `id` INT NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `objetivo` VARCHAR(45) NOT NULL,
  `precio` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `templegym`.`ROLE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `templegym`.`ROLE` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `templegym`.`USER_TRAINING_PLAN`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `templegym`.`USER_TRAINING_PLAN` (
  `USER_dni` INT NOT NULL,
  `TRAINING_PLAN_id` INT NOT NULL,
  PRIMARY KEY (`USER_dni`, `TRAINING_PLAN_id`),
  INDEX `fk_USER_has_TRAINING_PLAN_TRAINING_PLAN1_idx` (`TRAINING_PLAN_id` ASC) VISIBLE,
  INDEX `fk_USER_has_TRAINING_PLAN_USER_idx` (`USER_dni` ASC) VISIBLE,
  CONSTRAINT `fk_USER_has_TRAINING_PLAN_USER`
    FOREIGN KEY (`USER_dni`)
    REFERENCES `templegym`.`USER` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_USER_has_TRAINING_PLAN_TRAINING_PLAN1`
    FOREIGN KEY (`TRAINING_PLAN_id`)
    REFERENCES `templegym`.`TRAINING_PLAN` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `templegym`.`TRAINING_PLAN_ROUTINE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `templegym`.`TRAINING_PLAN_ROUTINE` (
  `TRAINING_PLAN_id` INT NOT NULL,
  `ROUTINE_ID` INT NOT NULL,
  PRIMARY KEY (`TRAINING_PLAN_id`, `ROUTINE_ID`),
  INDEX `fk_TRAINING_PLAN_has_ROUTINE_ROUTINE1_idx` (`ROUTINE_ID` ASC) VISIBLE,
  INDEX `fk_TRAINING_PLAN_has_ROUTINE_TRAINING_PLAN1_idx` (`TRAINING_PLAN_id` ASC) VISIBLE,
  CONSTRAINT `fk_TRAINING_PLAN_has_ROUTINE_TRAINING_PLAN1`
    FOREIGN KEY (`TRAINING_PLAN_id`)
    REFERENCES `templegym`.`TRAINING_PLAN` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TRAINING_PLAN_has_ROUTINE_ROUTINE1`
    FOREIGN KEY (`ROUTINE_ID`)
    REFERENCES `templegym`.`ROUTINE` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `templegym`.`TRAINING_PLAN_DIET`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `templegym`.`TRAINING_PLAN_DIET` (
  `TRAINING_PLAN_id` INT NOT NULL,
  `DIET_id` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`TRAINING_PLAN_id`, `DIET_id`),
  INDEX `fk_TRAINING_PLAN_has_DIET_DIET1_idx` (`DIET_id` ASC) VISIBLE,
  INDEX `fk_TRAINING_PLAN_has_DIET_TRAINING_PLAN1_idx` (`TRAINING_PLAN_id` ASC) VISIBLE,
  CONSTRAINT `fk_TRAINING_PLAN_has_DIET_TRAINING_PLAN1`
    FOREIGN KEY (`TRAINING_PLAN_id`)
    REFERENCES `templegym`.`TRAINING_PLAN` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TRAINING_PLAN_has_DIET_DIET1`
    FOREIGN KEY (`DIET_id`)
    REFERENCES `templegym`.`DIET` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `templegym`.`ROLE_USER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `templegym`.`ROLE_USER` (
  `ROLE_id` INT NOT NULL,
  `USER_dni` INT NOT NULL,
  PRIMARY KEY (`ROLE_id`, `USER_dni`),
  INDEX `fk_ROLE_has_USER_USER1_idx` (`USER_dni` ASC) VISIBLE,
  INDEX `fk_ROLE_has_USER_ROLE1_idx` (`ROLE_id` ASC) VISIBLE,
  CONSTRAINT `fk_ROLE_has_USER_ROLE1`
    FOREIGN KEY (`ROLE_id`)
    REFERENCES `templegym`.`ROLE` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ROLE_has_USER_USER1`
    FOREIGN KEY (`USER_dni`)
    REFERENCES `templegym`.`USER` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
